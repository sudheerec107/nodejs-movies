{"version":3,"sources":["components/Navbar/Navbar.module.css","components/UI/Input/input.module.css","container/auth/auth.module.css","components/UI/Button/Button.module.css","container/movie/movie.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Input/input.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","store/actions/auth.action.js","store/actions/actionTypes.js","container/auth/auth.js","axios.js","container/movies/movies.js","store/actions/movies.action.js","store/actions/movie.action.js","container/movie/movie.js","components/Navbar/NavBar.js","App.js","serviceWorker.js","store/reducers/auth.reducer.js","store/reducers/movies.reducer.js","store/reducers/movie.reducer.js","index.js"],"names":["module","exports","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","label","spinner","Loader","button","Button","btnType","onClick","clicked","disabled","children","authSuccess","token","type","authCheckState","dispatch","localStorage","getItem","removeItem","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","Auth","state","controls","email","placeholder","validation","isEmail","validity","password","passwordCheck","isSignup","inputChangedHandler","event","controlName","updateControls","target","setState","submitHandler","preventDefault","onAuth","swithAuthHandler","prevState","formElementArray","this","id","config","form","formElement","loading","Spinner","errorMessage","error","msg","authRedirect","isAuthenticated","to","Red","onSubmit","Component","connect","auth","isSignUp","authData","url","axios","post","then","response","setItem","data","catch","err","instanceAxios","create","baseURL","interceptors","request","use","headers","status","clear","window","location","Promise","reject","Movies","clickHandler","history","fetchData","moviesElement","Object","keys","movieGroups","movie","_id","title","movies","get","payload","movieSuccess","Movie","find","mv","match","params","updateMovie","movieEle","FloatLeft","FloatRight","name","rating","starCount","editing","year","movieLength","director","cast","description","fetchMovie","NavBar","Flex","Heading","AlignInput","App","onTryAutoSignUp","topNavBar","path","component","exact","Boolean","hostname","updateObject","oldObject","newObject","initialState","authStart","action","authFail","authLogout","reducer","moviesStart","moviesSuccess","groupsArr","groups","forEach","indexOf","category","moviesFail","moviesReducer","movieStart","movieFail","movieReducer","rootReducer","combineReducers","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,QAAU,wBAAwB,WAAa,6B,mBCA7HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,IAAM,oB,mBCA9ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,mBCA7FD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,4B,mBCApED,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,sRCuC5CC,EArCD,SAACC,GACX,IAAIC,EAAe,KACbC,EAAe,CAACC,IAAQC,cAI9B,OAHIJ,EAAMK,SAAWL,EAAMM,gBAAkBN,EAAMO,SAC/CL,EAAaM,KAAKL,IAAQM,SAEtBT,EAAMU,aACV,IAAM,QACFT,EAAe,yCAAOU,UAAWT,EAAaU,KAAK,MAAUZ,EAAMa,cAApD,CAAoEC,MAAOd,EAAMc,MAAOC,SAAUf,EAAMgB,WACvH,MACJ,IAAM,WACFf,EAAe,4CAAUU,UAAWT,EAAaU,KAAK,MAAUZ,EAAMa,cAAvD,CAAuEC,MAAOd,EAAMc,MAAOC,SAAUf,EAAMgB,WAC1H,MACA,IAAM,SACFf,EACA,4BAAQU,UAAWT,EAAaU,KAAK,KAAME,MAAOd,EAAMc,MAAOC,SAAUf,EAAMgB,SAEvEhB,EAAMa,cAAcI,QAAQC,KAAI,SAAAC,GAAM,OAClC,4BACAC,IAAKD,EAAOL,MACZA,MAAOK,EAAOL,OAAQK,EAAOE,kBAKzC,MACR,QACIpB,EAAe,yCAAOU,UAAWT,EAAaU,KAAK,MAAUZ,EAAMa,cAApD,CAAmEC,MAAOd,EAAMc,MAAQC,SAAUf,EAAMgB,WAE/H,OACI,yBAAKL,UAAWR,IAAQmB,OACpB,+BAAQtB,EAAMuB,OACbtB,I,iBC5BEuB,EAJC,kBACZ,yBAAKb,UAAWR,IAAQsB,QAAxB,e,iBCMWC,EAPA,SAAC1B,GAAD,OACX,4BACIW,UAAW,CAACR,IAAQwB,OAAQxB,IAAQH,EAAM4B,UAAUhB,KAAK,KACzDiB,QAAS7B,EAAM8B,QACfC,SAAU/B,EAAM+B,UAAW/B,EAAMgC,W,iBCE5BC,EAAc,SAACC,GACxB,MAAO,CACHC,KCVoB,eDWpBD,MAAOA,IA4CFE,EAAiB,WAC1B,OAAO,SAAAC,GACH,IAAMH,EAAQI,aAAaC,QAAQ,SAI/BF,EAHCH,EAGQD,EAAYC,IAtC7BI,aAAaE,WAAW,SACjB,CACHL,KCvBc,cCMTM,EAAgB,SAAC3B,EAAO4B,GACjC,IAAIC,GAAU,EACd,OAAKD,IAGDA,EAAME,WACND,EAA2B,KAAjB7B,EAAM+B,QAAiBF,GAGjCD,EAAMI,YACNH,EAAU7B,EAAMiC,QAAUL,EAAMI,WAAaH,GAE7CD,EAAMM,YACNL,EAAU7B,EAAMiC,QAAUL,EAAMM,WAAaL,GAE1CA,IAILM,E,4MACFC,MAAQ,CACJC,SAAU,CACNC,MAAO,CACH1C,YAAa,QACbG,cAAe,CACXsB,KAAM,QACNkB,YAAa,iBAEjBvC,MAAO,GACPwC,WAAY,CACRV,UAAU,EACVW,SAAS,GAEbC,UAAU,EACVjD,SAAS,GAEbkD,SAAU,CACN/C,YAAa,QACbG,cAAe,CACXsB,KAAM,WACNkB,YAAa,YAEjBvC,MAAO,GACPwC,WAAY,CACRV,UAAU,EACVE,UAAW,GAEfU,UAAU,EACVjD,SAAS,GAEbmD,cAAe,CACXhD,YAAa,QACbG,cAAe,CACXsB,KAAM,WACNkB,YAAa,qBAEjBvC,MAAO,GACPwC,WAAY,CACRV,UAAU,EACVE,UAAW,GAEfU,UAAU,EACVjD,SAAS,IAGjBoD,UAAU,G,EAGdC,oBAAsB,SAACC,EAAOC,GAC1B,IAAMC,EAAc,2BACb,EAAKb,MAAMC,UADE,kBAEfW,EAFe,2BAGT,EAAKZ,MAAMC,SAASW,IAHX,IAIZhD,MAAO+C,EAAMG,OAAOlD,MACpB0C,SAAUf,EAAcoB,EAAMG,OAAOlD,MAAO,EAAKoC,MAAMC,SAASW,GAAaR,YAC7E/C,SAAS,MAGjB,EAAK0D,SAAS,CAAEd,SAAUY,K,EAG9BG,cAAgB,SAACL,GACbA,EAAMM,iBACN,EAAKnE,MAAMoE,OAAO,EAAKlB,MAAMC,SAASC,MAAMtC,MACxC,EAAKoC,MAAMC,SAASM,SAAS3C,MAAO,EAAKoC,MAAMC,SAASO,cAAc5C,MAAO,EAAKoC,MAAMS,W,EAGhGU,iBAAmB,WACf,EAAKJ,UAAS,SAAAK,GACV,MAAO,CAAEX,UAAWW,EAAUX,c,uDAI5B,IAAD,OACCY,EAAmB,GACzB,IAAK,IAAInD,KAAOoD,KAAKtB,MAAMC,SACvBoB,EAAiB/D,KAAK,CAClBiE,GAAIrD,EACJsD,OAAQF,KAAKtB,MAAMC,SAAS/B,KAIpC,IAAIuD,EAAOJ,EAAiBrD,KAAI,SAAA0D,GAC5B,OAAQ,EAAK1B,MAAMS,UAA+B,kBAAnBiB,EAAYH,GAA0B,KACrE,kBAAC,EAAD,CACIrD,IAAKwD,EAAYH,GACjB/D,YAAakE,EAAYF,OAAOhE,YAChCG,cAAe+D,EAAYF,OAAO7D,cAClCC,MAAO8D,EAAYF,OAAO5D,MAC1BT,SAAUuE,EAAYF,OAAOlB,SAC7BlD,eAAgBsE,EAAYF,OAAOpB,WACnC/C,QAASqE,EAAYF,OAAOnE,QAC5BS,QAAS,SAAC6C,GAAD,OAAW,EAAKD,oBAAoBC,EAAOe,EAAYH,UAIpED,KAAKxE,MAAM6E,UACXF,EAAO,kBAACG,EAAD,OAGX,IAAIC,EAAe,KACfP,KAAKxE,MAAMgF,QACXD,EAAeP,KAAKxE,MAAMgF,MAAMC,KAGpC,IAAIC,EAAe,KAInB,OAHIV,KAAKxE,MAAMmF,kBACXD,EAAe,kBAAC,IAAD,CAAUE,GAAG,YAG5B,yBAAKzE,UAAWR,IAAQ8C,MACpB,yBAAKtC,UAAWR,IAAQkF,KAAMN,GAC7BG,EACD,0BAAMI,SAAUd,KAAKN,eAChBS,EACD,kBAAChD,EAAD,CAAQC,QAAQ,UAAUG,UAAU,GAAQyC,KAAKtB,MAAMS,SAAW,SAAW,YAEjF,kBAAChC,EAAD,CAAQG,QAAS0C,KAAKH,iBAAkBzC,QAAQ,UAAhD,aAAoE4C,KAAKtB,MAAMS,SAAW,UAAY,e,GAtHnG4B,aA2IJC,eAfS,SAACtC,GACrB,MAAO,CACH2B,QAAS3B,EAAMuC,KAAKZ,QACpBG,MAAO9B,EAAMuC,KAAKT,MAClBG,gBAAqC,MAApBjC,EAAMuC,KAAKvD,UAKT,SAAAG,GACvB,MAAO,CACH+B,OAAQ,SAAChB,EAAOK,EAAUC,EAAegC,GAAjC,OAA8CrD,EFrI1C,SAACe,EAAOK,EAAUC,EAAegC,GAEjD,OAAO,SAAArD,GACHA,EA7BG,CACHF,KCLkB,eDkClB,IAAMwD,EAAW,CACbvC,MAAOA,EACPK,SAAUA,GAEVmC,EAAM,wCACLF,IACDE,EAAM,2CACND,EAASjC,cAAgBA,GAE7BmC,IAAMC,KAAKF,EAAKD,GACXI,MAAK,SAAAC,GACF1D,aAAa2D,QAAQ,QAASD,EAASE,KAAKhE,OAC5CG,EAASJ,EAAY+D,EAASE,KAAKhE,WAGtCiE,OAAM,SAAAC,GACH/D,EAjCL,CACHF,KChBiB,YDiBjB6C,MA+B0BoB,EAAIJ,SAASE,WEiHwBT,CAAKrC,EAAOK,EAAUC,EAAegC,QAI7FF,CAA6CvC,GCnKtDoD,EAAgBR,IAAMS,OAAO,CAC/BC,QAHoD,KAMxDF,EAAcG,aAAaC,QAAQC,KAAI,SAAChC,GAEpC,OADAA,EAAOiC,QAAQ,gBAAmBrE,aAAaJ,MACxCwC,KAGX2B,EAAcG,aAAaR,SAASU,KAAI,SAACV,GACrC,OAAOA,KACR,SAAChB,GAKA,OAJ8B,MAA1BA,EAAMgB,SAASY,SACftE,aAAauE,QACbC,OAAOC,SAAS,SAEbC,QAAQC,OAAOjC,MAGXqB,QCjBTa,G,kNAMFC,aAAe,SAAC1C,GACZ,EAAKzE,MAAMoH,QAAQ5G,KAAK,SAAWiE,I,kEAJnCD,KAAKxE,MAAMqH,c,+BAOL,IAAD,OACDxC,EAAU,KACVL,KAAKxE,MAAM6E,UACXA,EAAW,kBAACC,EAAD,OAEf,IACMwC,EADSC,OAAOC,KAAKhD,KAAKxE,MAAMyH,aACTvG,KAAI,SAAAwG,GAC7B,OACI,yBAAKtG,IAAKsG,GACN,6BACA,6BACI,2BAAO/G,UAAU,SAAS+G,EAA1B,MAAoC,EAAK1H,MAAMyH,YAAYC,GAAO3E,OAAlE,MACA,6BACA,8BAEJ,6BACA,yBAAKpC,UAAU,kBAEP,EAAKX,MAAMyH,YAAYC,GAAOxG,KAAI,SAAAwG,GAC9B,OACI,yBAAKtG,IAAKsG,EAAMC,IAAKhH,UAAU,cAAckB,QAAS,kBAAM,EAAKsF,aAAaO,EAAMC,OAChF,0BAAMhH,UAAU,eAAe+G,EAAME,gBASrE,OACI,6BACK/C,EACAyC,O,GA3CI/B,cAgENC,eAdS,SAACtC,GACrB,MAAO,CACHuE,YAAavE,EAAM2E,OAAOJ,YAC1BzC,MAAO9B,EAAM2E,OAAO7C,MACpBH,QAAS3B,EAAM2E,OAAOhD,YAIH,SAACxC,GACxB,MAAO,CACHgF,UAAW,kBAAMhF,GC1Cd,SAAAA,GACHA,EArBG,CACHF,KJCoB,iBIoBpBkE,EAAcyB,IAAI,WACb/B,MAAK,SAAAC,GACF3D,EAlBL,CACHF,KJJsB,iBIKtB4F,QAgB+B/B,EAASE,UAEnCC,OAAM,SAAAC,GACH/D,EAdL,CACHF,KJVmB,cIWnB4F,QAY4B3B,cDuCrBZ,CAA6C0B,GE7D/Cc,EAAe,SAACH,GACzB,MAAO,CACH1F,KLCqB,gBKArB4F,QAASF,I,kCCLXI,E,kLACmB,IAAD,OAChB,GAAKzD,KAAKxE,MAAM6H,QAAuC,IAA7BrD,KAAKxE,MAAM6H,OAAO9E,OAErC,CACH,IAAM2E,EAAQlD,KAAKxE,MAAM6H,OAAOK,MAAK,SAAAC,GAAE,OAAIA,EAAGR,MAAQ,EAAK3H,MAAMoI,MAAMC,OAAO5D,MACxEiD,EACFlD,KAAKxE,MAAMsI,YAAYZ,GAEvBlD,KAAKxE,MAAMqH,UAAU7C,KAAKxE,MAAMoI,MAAMC,OAAO5D,SANjDD,KAAKxE,MAAMqH,UAAU7C,KAAKxE,MAAMoI,MAAMC,OAAO5D,M,+BAYjD,IAAI8D,EAAW,KACS,MAApB/D,KAAKxE,MAAM0H,QACXa,EACI,yBAAK5H,UAAU,SACX,yBAAKA,UAAWR,IAAQqI,WACpB,yBAAK7H,UAAU,UAAU6D,KAAKxE,MAAM0H,MAAME,QAE9C,yBAAKjH,UAAWR,IAAQsI,YACpB,6BACI,0BAAM9H,UAAU,qBAAqB6D,KAAKxE,MAAM0H,MAAME,OACtD,0BAAMjH,UAAU,eACZ,kBAAC,IAAD,CACIA,UAAU,WACV+H,KAAM,GACN5H,MAAO0D,KAAKxE,MAAM0H,MAAMiB,OACxBC,UAAW,EACXC,SAAS,KAEjB,+BAIJ,6BACI,6BACA,0BAAMlI,UAAU,cAAc6D,KAAKxE,MAAM0H,MAAMoB,KAA/C,MAAwDtE,KAAKxE,MAAM0H,MAAMqB,YAAzE,MAAyFvE,KAAKxE,MAAM0H,MAAMsB,UAC1G,6BACA,0BAAMrI,UAAU,cAAhB,SAAoC6D,KAAKxE,MAAM0H,MAAMuB,KAAKrI,KAAK,OAC/D,8BAEJ,6BACI,uBAAGD,UAAU,qBACR6D,KAAKxE,MAAM0H,MAAMwB,iBAS1C,IAAI1H,EAAU,KAId,OAHIgD,KAAKxE,MAAM6E,UACXrD,EAAW,kBAACsD,EAAD,OAGX,6BACKtD,EACA+G,O,GA9DGhD,aAoFLC,eAhBS,SAACtC,GACrB,MAAO,CACH2E,OAAQ3E,EAAM2E,OAAOA,OACrBH,MAAOxE,EAAMwE,MAAMA,MACnB1C,MAAO9B,EAAMwE,MAAM1C,MACnBH,QAAS3B,EAAMwE,MAAM7C,YAIF,SAACxC,GACxB,MAAO,CACHgF,UAAW,SAAC5C,GAAD,OAAQpC,ED/DD,SAACoC,GACvB,OAAO,SAAApC,GACHA,EArBG,CACHF,KLMmB,gBKgBnBkE,EAAcyB,IAAI,WAAarD,GAC1BsB,MAAK,SAAAC,GACF3D,EAAS2F,EAAahC,EAASE,UAElCC,OAAM,SAAAC,GACH/D,EAfL,CACHF,KLLkB,aKMlB4F,QAa2B3B,EAAIJ,SAASE,WCsDZiD,CAAW1E,KACvC6D,YAAa,SAACpC,GAAD,OAAU7D,EAAS2F,EAAa9B,QAItCV,CAA6CyC,G,yBC5E7CmB,EAZA,WACX,OACI,yBAAKzI,UAAW,CAACR,IAAQiJ,OAAQjJ,IAAQkJ,MAAMzI,KAAK,MAChD,6BAAK,0BAAMD,UAAWR,IAAQmJ,SAAzB,UACL,yBAAK3I,UAAWR,IAAQoJ,YAAxB,gBACG,2BAAOpH,KAAK,YCErBqH,E,kLAGFhF,KAAKxE,MAAMyJ,oB,+BAIX,IAAIC,EAAa,kBAAC,EAAD,MAIjB,OAHKlF,KAAKxE,MAAMmF,kBACfuE,EAAa,kBAAC,IAAD,CAAUtE,GAAG,WAGzB,yBAAKzE,UAAU,OACZ+I,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAW3G,IAC/B,kBAAC,IAAD,CAAO0G,KAAK,aAAaE,OAAK,EAACD,UAAW3B,IAC1C,kBAAC,IAAD,CAAO0B,KAAK,UAAUE,OAAK,EAACD,UAAW1C,IACvC,kBAAC,IAAD,CAAOyC,KAAK,IAAIE,OAAK,EAACD,UAAW1C,U,GAlBzB3B,aAqCHC,eAZS,SAACtC,GACvB,MAAO,CACLiC,gBAAqC,MAApBjC,EAAMuC,KAAKvD,UAIN,SAAAG,GACxB,MAAO,CACLoH,gBAAiB,kBAAMpH,EAASD,SAIrBoD,CAA4CgE,GCnCvCM,QACW,cAA7BhD,OAAOC,SAASgD,UAEe,UAA7BjD,OAAOC,SAASgD,UAEhBjD,OAAOC,SAASgD,SAAS3B,MACvB,2D,oBChBO4B,EAAe,SAACC,EAAWC,GACpC,OAAO,2BACAD,GACAC,IAILC,EAAe,CACjBjI,MAAOI,aAAaJ,MACpB8C,MAAO,KACPH,SAAS,GAGPuF,EAAY,SAAClH,EAAOmH,GACtB,OAAOL,EAAa9G,EAAO,CAAGhB,MAAO,KAAM8C,MAAO,KAAMH,SAAS,KAG/D5C,GAAc,SAACiB,EAAOmH,GACxB,OAAOL,EAAa9G,EAAO,CACvBhB,MAAOmI,EAAOnI,MACd8C,MAAO,KACPH,SAAS,KAIXyF,GAAW,SAACpH,EAAOmH,GACrB,OAAOL,EAAa9G,EAAO,CACvB8B,MAAOqF,EAAOrF,MAAOH,SAAS,KAIhC0F,GAAa,SAACrH,EAAOmH,GACvB,OAAOL,EAAa9G,EAAO,CACvBhB,MAAO,KACP8C,MAAO,KACPH,SAAS,KAmBF2F,GAfC,WAAmC,IAAlCtH,EAAiC,uDAAzBiH,EAAcE,EAAW,uCAC9C,OAAQA,EAAOlI,MACX,IV3CkB,aU4Cd,OAAOiI,EAAUlH,GACrB,IV5CoB,eU6ChB,OAAOjB,GAAYiB,EAAOmH,GAC9B,IV7CiB,YU8Cb,OAAOC,GAASpH,EAAOmH,GAC3B,IV9Cc,SU+CV,OAAOE,GAAWrH,GACtB,QACI,OAAOA,I,SChDbiH,GAAe,CACjBnF,MAAO,KACPH,SAAS,EACT4C,YAAa,IAGXgD,GAAc,SAACvH,EAAOmH,GACxB,OAAOL,EAAa9G,EAAO,CAAE2B,SAAS,EAAO4C,YAAa,GAAIzC,MAAO,QAEnE0F,GAAgB,SAACxH,EAAOmH,GAC1B,IAAMxC,EAASwC,EAAOtC,QAChB4C,EAAa,GACbC,EAAS,GAUf,OATA/C,EAAOgD,SAAQ,SAAAnD,IACgC,IAAvCiD,EAAUG,QAAQpD,EAAMqD,WACxBH,EAAOlD,EAAMqD,UAAU,CAACrD,GACxBiD,EAAUnK,KAAKkH,EAAMqD,WAErBH,EAAOlD,EAAMqD,UAAUvK,KAAKkH,MAI7BsC,EAAa9G,EAAO,CAAE2B,SAAS,EAAO4C,YAAamD,EAAQ/C,OAAQwC,EAAOtC,QAAS/C,OAAO,KAE/FgG,GAAa,SAAC9H,EAAOmH,GACvB,OAAOL,EAAa9G,EAAO,CAAE2B,SAAS,EAAO4C,YAAa,GAAIzC,MAAOqF,EAAOtC,WAgBjEkD,GAbO,WAAmC,IAAlC/H,EAAiC,uDAAzBiH,GAAcE,EAAW,uCACpD,OAAQA,EAAOlI,MACX,IX5BoB,eW6BhB,OAAOsI,GAAYvH,GACvB,IX7BsB,iBW8BlB,OAAOwH,GAAcxH,EAAOmH,GAChC,IX9BmB,cW+Bf,OAAOW,GAAW9H,EAAOmH,GAC7B,QACI,OAAOnH,ICtCbiH,GAAe,CACjBnF,MAAO,KACPH,SAAS,EACT6C,MAAO,MAGLwD,GAAa,SAAChI,EAAOmH,GACvB,OAAOL,EAAa9G,EAAO,CAAE2B,SAAS,EAAO6C,MAAO,KAAM1C,MAAO,QAE/DgD,GAAe,SAAC9E,EAAOmH,GACzB,OAAOL,EAAa9G,EAAO,CAAE2B,SAAS,EAAO6C,MAAO2C,EAAOtC,QAASF,OAAQwC,EAAOtC,QAAS/C,OAAO,KAEjGmG,GAAY,SAACjI,EAAOmH,GACtB,OAAOL,EAAa9G,EAAO,CAAE2B,SAAS,EAAO6C,MAAO,KAAM1C,MAAOqF,EAAOtC,WAgB7DqD,GAbM,WAAmC,IAAlClI,EAAiC,uDAAzBiH,GAAcE,EAAW,uCACnD,OAAQA,EAAOlI,MACX,IZVmB,cYWf,OAAO+I,GAAWhI,GACtB,IZXqB,gBYYjB,OAAO8E,GAAa9E,EAAOmH,GAC/B,IZZkB,aYad,OAAOc,GAAUjI,EAAOmH,GAC5B,QACI,OAAOnH,ICfbmI,GAAcC,aAAgB,CAClCzD,OAAQoD,GACRvD,MAAO0D,GACP3F,KAAM8F,KAEFC,GACkDC,KAClDC,GAAQC,aAAYN,GAAaG,GAAiBI,aAAgBC,OAExEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,SAKNC,SAASC,eAAe,SJoGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaC,gBAEdpG,OAAM,SAAAnB,GACLwH,QAAQxH,MAAMA,EAAMyH,c","file":"static/js/main.3367e65b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"Navbar_NavBar__I43XN\",\"Flex\":\"Navbar_Flex__1RkTZ\",\"Heading\":\"Navbar_Heading__1lkbQ\",\"AlignInput\":\"Navbar_AlignInput__1rX43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3BPgK\",\"Label\":\"input_Label__24bIE\",\"InputElement\":\"input_InputElement__2HI6E\",\"Invalid\":\"input_Invalid__3QqA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"auth_Auth__2n1AO\",\"Input\":\"auth_Input__2KPun\",\"Red\":\"auth_Red__2a0MT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FloatLeft\":\"movie_FloatLeft__28bWh\",\"FloatRight\":\"movie_FloatRight__20ZWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React from 'react';\nimport classes from './input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig}  value={props.value} onChange={props.changed}/>;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={inputClasses.join(' ')} {...props.elementConfig}  value={props.value} onChange={props.changed}/>;\n            break;\n            case ('select'):\n                inputElement = (\n                <select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}>\n                    {\n                        props.elementConfig.options.map(option => (\n                            <option\n                            key={option.value}\n                            value={option.value}>{option.displayValue}</option>\n                        ))\n                    }\n                </select>\n                );\n                break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>\n    }\n    return (\n        <div className={classes.Input}>\n            <label>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n        disabled={props.disabled}>{props.children}</button>\n);\n\nexport default button;\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n}\n\nexport const authSuccess = (token) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    };\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    return {\n        type: actionTypes.LOGOUT\n    };\n}\n\nexport const auth = (email, password, passwordCheck, isSignUp) => {\n\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password\n        };\n        let url = 'http://localhost:5000/api/users/login';\n        if (!isSignUp) {\n            url = 'http://localhost:5000/api/users/register';\n            authData.passwordCheck = passwordCheck\n        }\n        axios.post(url, authData)\n            .then(response => {\n                localStorage.setItem('token', response.data.token);\n                dispatch(authSuccess(response.data.token));\n\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data));\n            })\n\n    };\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            dispatch(authSuccess(token));\n        }\n    }\n}\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\n\nexport const MOVIES_START = 'MOVIES_START';\nexport const MOVIES_SUCCESS = 'MOVIES_SUCCESS';\nexport const MOVIES_FAIL = 'MOVIES_FAIL';\n\n\nexport const MOVIE_START = 'MOVIE_START';\nexport const MOVIE_SUCCESS = 'MOVIE_SUCCESS';\nexport const MOVIE_FAIL = 'MOVIE_FAIL';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './auth.module.css';\nimport Input from '../../components/UI/Input/input';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Button from '../../components/UI/Button/Button';\nimport { Redirect } from 'react-router-dom';\nimport { auth } from '../../store/actions/auth.action'\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n}\n\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                validity: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                validity: false,\n                touched: false\n            },\n            passwordCheck: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Re Enter Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                validity: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updateControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                validity: checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({ controls: updateControls });\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value,\n            this.state.controls.password.value, this.state.controls.passwordCheck.value, this.state.isSignup);\n    }\n\n    swithAuthHandler = () => {\n        this.setState(prevState => {\n            return { isSignup: !prevState.isSignup }\n        });\n    }\n\n    render() {\n        const formElementArray = [];\n        for (let key in this.state.controls) {\n            formElementArray.push({\n                id: key,\n                config: this.state.controls[key]\n            })\n        }\n\n        let form = formElementArray.map(formElement => {\n            return (this.state.isSignup && formElement.id === 'passwordCheck') ? null: (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.validity}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                );\n\n        })\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = this.props.error.msg;\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to=\"movies\" />\n        }\n        return (\n            <div className={classes.Auth}>\n                <div className={classes.Red}>{errorMessage}</div>\n                {authRedirect}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\" disabled={false}>{this.state.isSignup ? 'Log in' : 'Sign up'}</Button>\n                </form>\n                <Button clicked={this.swithAuthHandler} btnType=\"Danger\">Switch To {this.state.isSignup ? 'Sign up' : 'Log in'}</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token != null,\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, passwordCheck, isSignUp) => dispatch(auth(email, password, passwordCheck, isSignUp)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import axios from 'axios';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:5000/api'\n\nconst instanceAxios = axios.create({\n    baseURL: baseUrl\n});\n\ninstanceAxios.interceptors.request.use((config) => {\n    config.headers['x-auth-token'] =  localStorage.token;\n    return config;\n});\n\ninstanceAxios.interceptors.response.use((response) => {\n    return response;\n}, (error) => {\n    if (error.response.status === 401) {\n        localStorage.clear();\n        window.location='/auth';\n    };\n    return Promise.reject(error);\n});\n\nexport default instanceAxios;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { fetchMovies } from '../../store/actions/movies.action';\nimport './movies.css';\n\nclass Movies extends Component {\n\n    componentDidMount() {\n        this.props.fetchData();\n    }\n\n    clickHandler = (id) => {\n        this.props.history.push('movie/' + id);\n    }\n\n    render() {\n        let loading = null;\n        if (this.props.loading) {\n            loading = (<Spinner />);\n        }\n        const groups = Object.keys(this.props.movieGroups);\n        const moviesElement = groups.map(movie => {\n            return (\n                <div key={movie}>\n                    <div>\n                    <br/>\n                        <label className=\"title\">{movie} ( {this.props.movieGroups[movie].length} )</label>\n                        <br/>\n                        <br/>\n                    </div>\n                    <hr/>\n                    <div className=\"flex-container\">\n                        {\n                            this.props.movieGroups[movie].map(movie => {\n                                return  (\n                                    <div key={movie._id} className=\"movies-card\" onClick={() => this.clickHandler(movie._id)}>\n                                        <span className=\"movie-title\">{movie.title}</span>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            )\n        });\n        return (\n            <div>\n                {loading}\n                {moviesElement}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movieGroups: state.movies.movieGroups,\n        error: state.movies.error,\n        loading: state.movies.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: () => dispatch(fetchMovies())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n","import * as actionTypes from './actionTypes';\nimport instanceAxios from '../../axios';\n\nexport const moviesStart = () => {\n    return {\n        type: actionTypes.MOVIES_START\n    };\n}\n\nexport const moviesSuccess = (movies) => {\n    return {\n        type: actionTypes.MOVIES_SUCCESS,\n        payload: movies\n    };\n}\n\nexport const moviesFail = (error) => {\n    return {\n        type: actionTypes.MOVIES_FAIL,\n        payload: error\n    };\n}\n\nexport const fetchMovies = () => {\n    return dispatch => {\n        dispatch(moviesStart());\n        instanceAxios.get('/movies')\n            .then(response => {\n                dispatch(moviesSuccess(response.data))\n            })\n            .catch(err => {\n                dispatch(moviesFail(err));\n            })\n\n    };\n}\n","import * as actionTypes from './actionTypes';\nimport instanceAxios from '../../axios';\n\nexport const movieStart = () => {\n    return {\n        type: actionTypes.MOVIE_START\n    };\n}\n\nexport const movieSuccess = (movies) => {\n    return {\n        type: actionTypes.MOVIE_SUCCESS,\n        payload: movies\n    };\n}\n\nexport const movieFail = (error) => {\n    return {\n        type: actionTypes.MOVIE_FAIL,\n        payload: error\n    };\n}\n\nexport const fetchMovie = (id) => {\n    return dispatch => {\n        dispatch(movieStart());\n\n        instanceAxios.get('/movies/' + id)\n            .then(response => {\n                dispatch(movieSuccess(response.data))\n            })\n            .catch(err => {\n                dispatch(movieFail(err.response.data));\n            })\n\n    };\n}\n","import React, { Component } from 'react';\nimport { fetchMovie, movieSuccess } from '../../store/actions/movie.action';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './movie.module.css';\nimport StarRatingComponent from 'react-star-rating-component';\n\nclass Movie extends Component {\n    componentDidMount() {\n        if (!this.props.movies || this.props.movies.length === 0) {\n            this.props.fetchData(this.props.match.params.id);\n        } else {\n            const movie = this.props.movies.find(mv => mv._id === this.props.match.params.id);\n            if (!!movie) {\n                this.props.updateMovie(movie);\n            } else {\n                this.props.fetchData(this.props.match.params.id);\n            }\n        }\n    }\n\n    render() {\n        let movieEle = null;\n        if (this.props.movie != null) {\n            movieEle = (\n                <div className=\"movie\">\n                    <div className={classes.FloatLeft}>\n                        <div className=\"title2\">{this.props.movie.title}</div>\n                    </div>\n                    <div className={classes.FloatRight}>\n                        <div>\n                            <span className=\"float-left title1\">{this.props.movie.title}</span>\n                            <span className=\"float-right\">\n                                <StarRatingComponent\n                                    className=\"big-font\"\n                                    name={''}\n                                    value={this.props.movie.rating}\n                                    starCount={5}\n                                    editing={false} />\n                            </span>\n                            <div>\n                            </div>\n                        </div>\n\n                        <div>\n                            <br />\n                            <span className=\"float-left\">{this.props.movie.year} | {this.props.movie.movieLength} | {this.props.movie.director}</span>\n                            <br />\n                            <span className=\"float-left\">Cast: {this.props.movie.cast.join(', ')}</span>\n                            <br />\n                        </div>\n                        <div>\n                            <p className=\"movie-description\">\n                                {this.props.movie.description}\n                            </p>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n\n        let spinner = null;\n        if (this.props.loading) {\n            spinner = (<Spinner />);\n        }\n        return (\n            <div>\n                {spinner}\n                {movieEle}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movies: state.movies.movies,\n        movie: state.movie.movie,\n        error: state.movie.error,\n        loading: state.movie.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (id) => dispatch(fetchMovie(id)),\n        updateMovie: (data) => dispatch(movieSuccess(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n","import React from 'react';\nimport classes from './Navbar.module.css';\n\nconst NavBar = () => {\n    return (\n        <div className={[classes.NavBar, classes.Flex].join(' ')}>\n            <div><span className={classes.Heading}>MOVIE</span></div>\n            <div className={classes.AlignInput}>\n            🔎 <input type=\"text\" />\n            </div>\n        </div>\n\n    );\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Auth from './container/auth/auth';\nimport Movies from './container/movies/movies';\nimport Movie from './container/movie/movie';\nimport './App.css';\nimport { authCheckState } from './store/actions/auth.action';\nimport NavBar from './components/Navbar/NavBar';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n    let topNavBar = (<NavBar/>);\n    if (!this.props.isAuthenticated) {\n     topNavBar = (<Redirect to=\"/auth\"></Redirect>)\n    }\n    return (\n      <div className=\"App\">\n        {topNavBar}\n        <Switch>\n          <Route path=\"/auth\" component={Auth}></Route>\n          <Route path=\"/movie/:id\" exact component={Movie}></Route>\n          <Route path=\"/movies\" exact component={Movies}></Route>\n          <Route path=\"/\" exact component={Movies}></Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token != null\n  }\n}\n\nconst mapDispatchToProp = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authCheckState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProp)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const updateObject = (oldObject, newObject) => {\n    return {\n        ...oldObject,\n        ...newObject\n    }\n}\n\nconst initialState = {\n    token: localStorage.token,\n    error: null,\n    loading: false,\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {  token: null, error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error, loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        error: null,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from './auth.reducer';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    movieGroups: {}\n}\n\nconst moviesStart = (state, action) => {\n    return updateObject(state, { loading: true,  movieGroups: {}, error: null });\n}\nconst moviesSuccess = (state, action) => {\n    const movies = action.payload;\n    const groupsArr =  [];\n    const groups = {}\n    movies.forEach(movie => {\n        if (groupsArr.indexOf(movie.category) === -1) {\n            groups[movie.category]=[movie];\n            groupsArr.push(movie.category);\n        } else {\n            groups[movie.category].push(movie)\n        }\n    });\n\n    return updateObject(state, { loading: false, movieGroups: groups, movies: action.payload, error: false });\n}\nconst moviesFail = (state, action) => {\n    return updateObject(state, { loading: false, movieGroups: {}, error: action.payload });\n}\n\nconst moviesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.MOVIES_START:\n            return moviesStart(state, action);\n        case actionTypes.MOVIES_SUCCESS:\n            return moviesSuccess(state, action);\n        case actionTypes.MOVIES_FAIL:\n            return moviesFail(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default moviesReducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from './auth.reducer';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    movie: null\n}\n\nconst movieStart = (state, action) => {\n    return updateObject(state, { loading: true,  movie: null, error: null });\n}\nconst movieSuccess = (state, action) => {\n    return updateObject(state, { loading: false, movie: action.payload, movies: action.payload, error: false });\n}\nconst movieFail = (state, action) => {\n    return updateObject(state, { loading: false, movie: null, error: action.payload });\n}\n\nconst movieReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.MOVIE_START:\n            return movieStart(state, action);\n        case actionTypes.MOVIE_SUCCESS:\n            return movieSuccess(state, action);\n        case actionTypes.MOVIE_FAIL:\n            return movieFail(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default movieReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth.reducer';\nimport { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport moviesReducer from './store/reducers/movies.reducer';\nimport movieReducer from './store/reducers/movie.reducer';\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  movie: movieReducer,\n  auth: authReducer\n})\nconst composeEnhancers = process.env.NODE_ENV === 'development' ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}